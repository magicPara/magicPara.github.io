<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 魔法师の手抄笔记</title>
    <link>https://magicpara.github.io/post/</link>
    <description>Recent content in Posts on 魔法师の手抄笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 05 Dec 2021 11:40:27 +0800</lastBuildDate><atom:link href="https://magicpara.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo&#43;GitHub搭建个人博客</title>
      <link>https://magicpara.github.io/p/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sun, 05 Dec 2021 11:40:27 +0800</pubDate>
      
      <guid>https://magicpara.github.io/p/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>前言 我在搭建博客之前了解了几个博客框架，WordPress，Hexo，Hugo。
在这里面，WordPress据我了解是需要自己买服务器，白嫖党直接pass；Hexo用的Nodejs，无意间在网上看到了张图，放在下面了，我感觉自己是招架不住的；Hugo的话貌似配置起来简单，搭建也方便，最后就选了Hugo作为博客框架。
 image-20211207001625454 
安装Hugo 这里个人是推荐用包管理工具进行安装。其实以前用过一段时间Linux，奈何软件太少，只能退回Windows，一直对Linux那个极其方便的包管理工具很留念。后来就是在搭建这个Hugo博客的时候发现Windows上还有Chocolate和Scoop这两个包管理工具，极力推荐大家尝试一下，下面会附上两个工具的安装方法。
方法一：利用Scoop安装Hugo 先是打开终端，输入下面两条命令来安装Scoop
set-executionpolicy remotesigned -scope currentuser iex (new-object net.webclient).downloadstring(&#39;https://get.scoop.sh&#39;) 如果看到下面的提示就是安装成功
Scoop was installed successfully! 然后就可以输入指令回车就会自动安装了。这里二选一就行，因为我后面选择的主题是需要用到扩展版的，所以我这里就是用的第二条指令
scoop install hugo scoop install hugo-extended	//如果打算跟我安装同一个主题的话就安装这一个 方法二：利用Chocolate安装Hugo 这里需要管理员打开终端，才能够安装Chocolate，如果输入下面的命令没看到报错基本就是安装成功了，注意，下面是一条命令，直接复制粘贴上去就行了
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;)) 跟上面Scoop一样，在终端里面输入，这里也放了两条指令，根据自己需求来就行
choco install hugo -confirm choco install hugo-extended -confirm 验证Hugo安装 验证Hugo是否安装成功，只需要在CMD里面输入Hugo version就会显示安装的Hugo版本号了
 image-20211207231659496 
创建本地博客 我个人习惯是把博客直接放到桌面上，还能时刻提醒我还有博客这玩意QAQ，你们自己可以放到自己喜欢的地方。
本地博客文件的创建 打开终端后输入下面的命令
hugo new site blog	//创建本地博客文件 cd .</description>
    </item>
    
    <item>
      <title>Typora&#43;PicGo Core&#43;SM.MS实现自动上传图片</title>
      <link>https://magicpara.github.io/p/typora-picgo-core-sm.ms%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</link>
      <pubDate>Sat, 04 Dec 2021 01:11:08 +0800</pubDate>
      
      <guid>https://magicpara.github.io/p/typora-picgo-core-sm.ms%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</guid>
      <description>准备SM.MS图床 先自行注册一个账号
SM.MS注册地址：Register - SM.MS - Simple Free Image Hosting
注册完成登陆后，来到首页点击User下的Dashboard
 image-20211204013246251 
进入之后可以看到左侧有一个API Token，进去点击生成令牌，然后会出现一串字符，这个会在后面需要用到，可以先保存起来，到这里SM.MS的部分就结束了
 image-20211204014118980 
Typora配置PicGo-Core 首先需要点击左上角的文件选项，进入偏好设置，来到图像这，把上传服务设置为PicGo-Core，然后下载它，插入图片时的操作和下面的网络与本地图片上传规则可以先不更改，等成功后再操作
 image-20211204015116329.png 
下载完了之后，打开配置文件，用下面的代码替换掉配置文件里的内容，并把上面SM.MS里的令牌复制到token后面
{ &amp;#34;picBed&amp;#34;: { &amp;#34;uploader&amp;#34;: &amp;#34;smms&amp;#34;, // 代表当前的默认上传图床为 SM.MS,  &amp;#34;smms&amp;#34;: { &amp;#34;token&amp;#34;: &amp;#34;&amp;#34; // 从 https://sm.ms/home/apitoken 获取的 token  } }, &amp;#34;picgoPlugins&amp;#34;: {} // 为插件预留 } 然后点击验证图片上传选项，就可以看到图片上传成功了，这时候就可以把插入图片时的操作换为上图中的上传图像，安心写作了
 image-20211204232732599</description>
    </item>
    
    <item>
      <title>Git命令备忘录</title>
      <link>https://magicpara.github.io/p/git%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98%E5%BD%95/</link>
      <pubDate>Thu, 02 Dec 2021 23:35:22 +0800</pubDate>
      
      <guid>https://magicpara.github.io/p/git%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98%E5%BD%95/</guid>
      <description>拉取远程仓库 git init	##初始化仓库 git remote add origin	##后面加上仓库链接，链接远程仓库 git pull -u origin master	拉取至本地仓库 第一次部署hugo git init git remote add origin ##后面加上仓库链接，链接远程仓库 git add . git commit -m &amp;quot;first&amp;quot; git push -u origin master	##推送到远程仓库 后续更新hugo git add . git status git commit -m &amp;quot;update&amp;quot; git push </description>
    </item>
    
  </channel>
</rss>
