[{"content":"前言 我在搭建博客之前了解了几个博客框架，WordPress，Hexo，Hugo。\n在这里面，WordPress据我了解是需要自己买服务器，白嫖党直接pass；Hexo用的Nodejs，无意间在网上看到了张图，放在下面了，我感觉自己是招架不住的；Hugo的话貌似配置起来简单，搭建也方便，最后就选了Hugo作为博客框架。\n image-20211207001625454 \n安装Hugo 这里个人是推荐用包管理工具进行安装。其实以前用过一段时间Linux，奈何软件太少，只能退回Windows，一直对Linux那个极其方便的包管理工具很留念。后来就是在搭建这个Hugo博客的时候发现Windows上还有Chocolate和Scoop这两个包管理工具，极力推荐大家尝试一下，下面会附上两个工具的安装方法。\n方法一：利用Scoop安装Hugo 先是打开终端，输入下面两条命令来安装Scoop\nset-executionpolicy remotesigned -scope currentuser iex (new-object net.webclient).downloadstring('https://get.scoop.sh') 如果看到下面的提示就是安装成功\nScoop was installed successfully! 然后就可以输入指令回车就会自动安装了。这里二选一就行，因为我后面选择的主题是需要用到扩展版的，所以我这里就是用的第二条指令\nscoop install hugo scoop install hugo-extended\t//如果打算跟我安装同一个主题的话就安装这一个 方法二：利用Chocolate安装Hugo 这里需要管理员打开终端，才能够安装Chocolate，如果输入下面的命令没看到报错基本就是安装成功了，注意，下面是一条命令，直接复制粘贴上去就行了\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) 跟上面Scoop一样，在终端里面输入，这里也放了两条指令，根据自己需求来就行\nchoco install hugo -confirm choco install hugo-extended -confirm 验证Hugo安装 验证Hugo是否安装成功，只需要在CMD里面输入Hugo version就会显示安装的Hugo版本号了\n image-20211207231659496 \n创建本地博客 我个人习惯是把博客直接放到桌面上，还能时刻提醒我还有博客这玩意QAQ，你们自己可以放到自己喜欢的地方。\n本地博客文件的创建 打开终端后输入下面的命令\nhugo new site blog\t//创建本地博客文件 cd ./blog\t//进入博客文件夹 hugo server\t//启动博客 启动完之后可以进入默认的网址查看，不过还没有配置主题，所以只会出现一个完全空白的网页，网址可以在刚刚输入的命令行里找到，如果使用WT终端的话按住Ctrl再左键点击就能直接打开网页\n image-20211207235159627 \n博客添加主题 我这里使用Hugo-theme-stack作为演示，想要其他主题的也可以去皮肤列表 - Hugo中文文档 里面看看。在博客文件夹里打开终端，用git来下载\ncd .\\themes\\ git clone git@github.com:CaiJimmy/hugo-theme-stack.git 下载完了之后进入主题文件夹找到exampleSite文件夹，把里面的文件都复制粘贴到博客主目录里面，嫌麻烦的复制粘贴下面的命令在更改的终端里运行就行，然后可以运行一下本地博客预览一下主题\ncp .\\hugo-theme-stack\\exampleSite\\* ../ -r\t//复制粘贴主题文件 cd ../ hugo server\t//启动博客服务 生成静态博客文件 输入下面简短的命令后就会出现一个叫public的文件夹，这个就是之后要推上GitHub的文件\nhugo 然后你就会发现这里有个坑。。。\n image-20211209000813889 \n可以看到报错文件，问题位置在第32行，其实当遇到问题时，比起解决问题，我更倾向于解决提出问题的人，所以我这里直接把这篇文章删掉就行了\nrm .\\content\\post\\rich-content\t//删除问题文章 hugo\t//创建静态博客文件 ls\t//如果有public文件夹就是成功创建了 部署到github 可以根据个人情况选择GitHub和Gitee，这里选择GitHub作为演示。不过在创建GitHub仓库前，需要先安装Git。\nGit安装 可以自己去Git里面下载安装，一路点下一部就行，也可以用Chocolate或者Scoop来进行安装，记住要管理员打开终端\nchoco install git.install\t//Chocolate安装Git\tscoop install git\t//Scoop安装Git git version\t//检查是否安装成功 创建仓库 光标移到右上角头像，来到Your repositories里面，点击绿色的New来创建仓库。仓库必须是Public的，名字需要些自己账号的名字加上固定的网站后缀，填写这两项后就可以直接创建了\n账号名字.github.io  image-20211208234102705 \n创建完之后来到仓库页面，会来到Quick setup页面，复制页面中的链接，HTTPS跟SSH都行，然后来到public文件夹里打开终端\ngit init git commit -m \u0026quot;first commit\u0026quot;\tgit remote add origin //这里填入自己复制的链接 git push -u origin master 完成后可能需要过几分钟，在地址栏输入仓库名称就能够看到自己的网站了\n","date":"2021-12-05T11:40:27+08:00","permalink":"https://magicpara.github.io/p/hugo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","title":"Hugo+GitHub搭建个人博客"},{"content":"准备SM.MS图床 先自行注册一个账号\nSM.MS注册地址：Register - SM.MS - Simple Free Image Hosting\n注册完成登陆后，来到首页点击User下的Dashboard\n image-20211204013246251 \n进入之后可以看到左侧有一个API Token，进去点击生成令牌，然后会出现一串字符，这个会在后面需要用到，可以先保存起来，到这里SM.MS的部分就结束了\n image-20211204014118980 \nTypora配置PicGo-Core 首先需要点击左上角的文件选项，进入偏好设置，来到图像这，把上传服务设置为PicGo-Core，然后下载它，插入图片时的操作和下面的网络与本地图片上传规则可以先不更改，等成功后再操作\n image-20211204015116329.png \n下载完了之后，打开配置文件，用下面的代码替换掉配置文件里的内容，并把上面SM.MS里的令牌复制到token后面\n{ \u0026#34;picBed\u0026#34;: { \u0026#34;uploader\u0026#34;: \u0026#34;smms\u0026#34;, // 代表当前的默认上传图床为 SM.MS,  \u0026#34;smms\u0026#34;: { \u0026#34;token\u0026#34;: \u0026#34;\u0026#34; // 从 https://sm.ms/home/apitoken 获取的 token  } }, \u0026#34;picgoPlugins\u0026#34;: {} // 为插件预留 } 然后点击验证图片上传选项，就可以看到图片上传成功了，这时候就可以把插入图片时的操作换为上图中的上传图像，安心写作了\n image-20211204232732599 \n","date":"2021-12-04T01:11:08+08:00","permalink":"https://magicpara.github.io/p/typora-picgo-core-sm.ms%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/","title":"Typora+PicGo Core+SM.MS实现自动上传图片"},{"content":"拉取远程仓库 git init\t##初始化仓库 git remote add origin\t##后面加上仓库链接，链接远程仓库 git pull -u origin master\t拉取至本地仓库 第一次部署hugo git init git remote add origin ##后面加上仓库链接，链接远程仓库 git add . git commit -m \u0026quot;first\u0026quot; git push -u origin master\t##推送到远程仓库 后续更新hugo git add . git status git commit -m \u0026quot;update\u0026quot; git push ","date":"2021-12-02T23:35:22+08:00","permalink":"https://magicpara.github.io/p/git%E5%91%BD%E4%BB%A4%E5%A4%87%E5%BF%98%E5%BD%95/","title":"Git命令备忘录"}]